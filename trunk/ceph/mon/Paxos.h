// -*- mode:C++; tab-width:8; c-basic-offset:2; indent-tabs-mode:t -*- 
/*
 * Ceph - scalable distributed file system
 *
 * Copyright (C) 2004-2006 Sage Weil <sage@newdream.net>
 *
 * This is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License version 2.1, as published by the Free Software 
 * Foundation.  See file COPYING.
 * 
 */

/*
time---->

cccccccccccccccccca????????????????????????????????????????
cccccccccccccccccca????????????????????????????????????????
cccccccccccccccccca???????????????????????????????????????? leader
cccccccccccccccccc????????????????????????????????????????? 
ccccc?????????????????????????????????????????????????????? 

last_committed

pn_from
pn

a 12v 
b 12v
c 14v
d
e 12v


*/

#ifndef __MON_PAXOS_H
#define __MON_PAXOS_H

#include "include/types.h"
#include "include/buffer.h"
#include "msg/Message.h"

#include "include/Context.h"

#include "common/Timer.h"

class Monitor;
class MMonPaxos;

// i am one state machine.
class Paxos {
  Monitor *mon;
  int whoami;

  // my state machine info
  int machine_id;
  const char *machine_name;

  // phase 1
  version_t last_committed;
  version_t accepted_pn;
  version_t accepted_pn_from;
  
  // results from our last replies
  int        num_last;
  version_t  old_accepted_pn;
  bufferlist old_accepted_value;

  // phase 2
  bufferlist new_value;
  int        num_accepted;
 
  void collect(version_t oldpn);
  void handle_collect(MMonPaxos*);
  void handle_last(MMonPaxos*);
  void begin(bufferlist& value);
  void handle_begin(MMonPaxos*);
  void handle_accept(MMonPaxos*);
  void commit();
  void handle_commit(MMonPaxos*);

  version_t get_new_proposal_number(version_t gt=0);
  
public:
  Paxos(Monitor *m, int w,
	int mid,const char *mnm) : mon(m), whoami(w), 
				   machine_id(mid), machine_name(mnm) {
  }

  void dispatch(Message *m);

  void leader_start();

};



#endif

