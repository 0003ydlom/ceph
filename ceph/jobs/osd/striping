#!/usr/bin/perl
# hi there
{
	# startup
	'n' => 28,          # mpi nodes

	'sleep' => 3,      # seconds between runs
	'nummds' => 1,

	'numosd' => [2,3,4,5,6,7], #[6, 8, 10, 12, 16],
	#'cper' => [4, 5, 6, 7, 8, 9, 10, 11, 12], #[1, 4, 6, 8, 16, 32, 64], 
	#'cper' => [4, 6, 8, 10, 12, 16, 20], #[1, 4, 6, 8, 16, 32, 64], 
	'cper' => 10,
	
	'_dep' => [ 'numclient' => '$numosd * $cper' ],
	#'numclient' => [5, 10, 20, 50, 75, 100, 150 ],
	
	'start' => 30,
	'end' => 90,
	'until' => 100,     # --syn until $n    ... when to stop clients
	'kill_after' => 120,

	# parameters
	'fs' => 'ebofs',
	'writefile' => 1,

	'writefile_size' => [ 1048576 ],
#	'writefile_size' => [
#						 2048*1024,
#		1048576,
#						 512*1024,
#						 262144,
#						 65536,
#						 16384
#						 ],
	'writefile_mb' => 1000,
	
	'file_layout_num_rep'=> 1,

	'osd_pg_bits' => 12,#[6, 8, 10, 12, 14],
	
	'osd_object_layout' => [ 'hashino' ],#'hash', 'hashino', 'linear' ],
	'osd_pg_layout' => [ 'crush', 'linear', 'hash' ], 

	#'custom' => '--tcp_skip_rank0', # --osd_maxthreads 0',
	'custom' => '--debug_after 110 --debug_osd 15 --debug_filer 15 --debug 5',
	
	# for final summation (script/sum.pl)

	'comb' => {
		'x' => 'numosd',#'osd_pg_bits',
		'vars' => [ 'osd.c_wrb', 'cl.wrlat' ],
#			'maptitle' => { 'osd_object_layout=' => '',
#							',osd_pg_layout=' => ' + '}
	}
};


=item some googoo notes

for 1mb 1x writes, 

 with numosd=6, min cper=6 to saturate (cper_saturate)
 googoo saturates at numosd=8.  (osd_saturate)

    -> so, numosd=6 or 7 is a safe size!




=cut
